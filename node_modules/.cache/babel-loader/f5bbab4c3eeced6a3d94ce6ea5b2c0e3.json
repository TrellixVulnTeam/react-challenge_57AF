{"ast":null,"code":"var _jsxFileName = \"/Users/ruth/Downloads/Test Front End /challenge/react-challenge/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { routes } from './routes';\nimport { ResultContext } from './helpers/ResultContext';\nimport { useState } from 'react';\n/**\n *\n * @returns {*}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const resultInitialState = {\n    items: [],\n    categories: []\n  };\n  const [results, setResults] = useState(resultInitialState);\n  return /*#__PURE__*/_jsxDEV(ResultContext.Provider, {\n    value: {\n      results,\n      setResults\n    },\n    children: /*#__PURE__*/_jsxDEV(\"routes\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)\n  /*{ <React.Fragment>\n    <div id={`Meli`} className={``}>\n      <BrowserRouter >\n        <div className={``}>\n          <Routes>\n            {Object.keys(routes()).map((element, index) => {\n              const RouterComponent = routes()[element].component;\n              return <Route key={index} exact path={element} element={<RouterComponent />} />;\n            })}\n          </Routes>\n        </div>\n      </BrowserRouter>\n    </div>\n  </React.Fragment> }*/\n  ;\n};\n\n_s(App, \"Vii/jQ7aQUqBNfHoEfqZ+W5q+h0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ruth/Downloads/Test Front End /challenge/react-challenge/src/App.js"],"names":["React","BrowserRouter","Routes","Route","routes","ResultContext","useState","App","resultInitialState","items","categories","results","setResults"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAMC,kBAAkB,GAAG;AACzBC,IAAAA,KAAK,EAAE,EADkB;AAEzBC,IAAAA,UAAU,EAAE;AAFa,GAA3B;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACE,kBAAD,CAAtC;AAEA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7BG,MAAAA,OAD6B;AACpBC,MAAAA;AADoB,KAA/B;AAAA,2BAGE;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBE;AAqBD,CA7BD;;GAAML,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport { routes } from './routes';\nimport { ResultContext } from './helpers/ResultContext'\nimport { useState } from 'react'\n/**\n *\n * @returns {*}\n * @constructor\n */\nconst App = () => {\n\n  const resultInitialState = {\n    items: [],\n    categories: [],\n  }\n  const [results, setResults] = useState(resultInitialState);\n\n  return (\n    <ResultContext.Provider value={{\n      results, setResults\n    }}>\n      <routes />\n    </ResultContext.Provider>\n    /*{ <React.Fragment>\n      <div id={`Meli`} className={``}>\n        <BrowserRouter >\n          <div className={``}>\n            <Routes>\n              {Object.keys(routes()).map((element, index) => {\n                const RouterComponent = routes()[element].component;\n                return <Route key={index} exact path={element} element={<RouterComponent />} />;\n              })}\n            </Routes>\n          </div>\n        </BrowserRouter>\n      </div>\n    </React.Fragment> }*/\n  );\n};\n\nexport default App;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}